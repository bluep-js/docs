Добро пожаловать в документацию @bluepjs!
=========================================

**@bluepjs** - это библиотека визуального программирования, работающего на Java Script, вдохновленная системой Blueprints от Unreal Engine.

Сценарии Blueprint выглядят следующим образом:

.. image:: ./_static/intro-blueprint-example.png
   :alt: Пример скриптинга Blueprint

**@bluepjs** может быть интегрирован в проекты, требующие визуального программирования поведения объектов проекта.

Совместимость версий
--------------------

Проект @bluepjs находится в стадии активной разработки, но это не значит, что вы не можете его использовать.

Номера версий для @bluepjs следующие: **MAJOR.MINOR.PATCH**.

К сожалению, сейчас нет гарантии обратной совместимости между версиями. Некоторые функциональные возможности новых версий перестраивают некоторые старые временные решения, и обновление версии до `1.0.x`, по умолчанию, потребует ручной перестройки "Библиотеки" при обновлении некоторых версий.

**MAJOR**

  В настоящее время это ``0`` до полного внедрения ООП/шаблонов/импорта/экспорта и затем это будет ``1.0.?`` версия.

  Основная версия будет увеличиваться при больших обновлениях скриптового движка.

**MINOR**

  Будет увеличиваться при каждом ценном обновлении в рамках основной дорожной карты. Сбрасывается на ноль при увеличении номера major.

**PATCH**

  Будет увеличиваться при каждом обновлении. Не сбрасывается. Ничего не значит для обратной совместимости.

.. Note::

   Мне очень жаль, но документация также находится в разработке (и не так активно, как движок).

   Пожалуйста, посмотрите проект https://github.com/bluep-js/example для демонстрации.

Журнал изменений
----------------

**0.3.4**

 * ``AbstractModule::metadata()`` для динамических метаданных модуля
 * ``AbstractModule::vm()``
 * ``AbstractActor::metadata()`` для динамических метаданных актора
 * ``AbstractNode::context()``
 * несколько слотов для узлов
 * Множественные слоты для string/append, boolean/and, boolean/or
 * поддержка ООП, узел "cast to"
 * узел "Switch ... case"
 * узел number/plus
 * типы basic/date; basic/time
 * ``async Vm::start()`` / ``async Vm::stop()``
 * ``Vm::runModuleEvent(info, inputs)`` для простого запуска простых событий

**0.2.2**

  * Частичная поддержка ООП без правильного наследования классов
  * ``Модули``, ``типы``, ``энумы`` и ``структуры`` автоподдержка
  * ``Actors``, ``nodes`` обновлены до стиля ООП (от "node-per-actor" до "node-per-actor-type(class) with actor input" generation (требуется перестройка поведения акторов в библиотеке!)
  * VM должна быть запущена для работы. VM также может быть остановлена
  * Модуль ``VM`` с событием ``On VM Start``
  * API модулей для запуска/остановки
  * Поддержка шаблонов для IDE (тип ``basic/template``)
  * исправления ошибок

**0.1.1**

  * IDE ограничена в использовании только библиотеки ``Default``
  * исправления

Содержание
----------

.. toctree::

   Вступление  <intro_rus.rst>
   Документация пользователя <user_rus.rst>
   Руководства разработчика <dev_rus.rst>
